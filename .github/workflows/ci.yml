name: CI
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

# Cancel in-progress runs for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  format:
    name: "🧹 Format"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - name: "Check formatting ✨"
        run: pnpm run format:check --if-present || pnpm run format --if-present

  lint:
    name: "🔎 Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - name: "Run linting 🧪"
        run: pnpm run lint --if-present

  typecheck:
    name: "🧠 Typecheck"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - name: "Type checking 🧩"
        run: pnpm run typecheck --if-present

  build:
    name: "🛠️ Build"
    runs-on: ubuntu-latest
    needs: [format, lint, typecheck]
    outputs:
      project-type: react
      deploy-target: pages
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - name: "Building project 🏗️"
        run: pnpm run build --if-present
      - name: "Upload build artifacts"
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            dist/
            build/
            .next/
            out/
          retention-days: 7
          if-no-files-found: ignore

  deploy:
    name: "🚀 Deploy"
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Create Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            ## 🚀 Deployment v${{ github.run_number }}
            
            - **Deployed to**: GitHub Pages
            - **Commit**: ${{ github.sha }}
            - **Build**: ${{ github.run_id }}
            
            [View Deployment](https://pages.github.com/${{ github.repository }})
          draft: false
          prerelease: false